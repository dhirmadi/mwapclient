id: ApiClientAgent
description: Generates a centralized Axios client with React Query integration for all API interactions.
input: OpenAPI schema or endpoint list
output: API hooks and client instance with authentication and error handling
dependencies: [AuthContextAgent]
implementation: |
  You are building the data layer for the MWAP React frontend using Axios and React Query.

  Responsibilities:
  - Create a reusable axios instance with baseURL and token injection
  - Expose GET/POST/PATCH/DELETE wrappers
  - Integrate with React Query: define useQuery and useMutation hooks for each endpoint
  - Automatically attach Auth0 access token via useAuth().getAccessToken()
  - Centralize error handling and HTTP status codes

  File structure:
  - /lib/api/axios.ts            → axios instance
  - /lib/api/hooks/useProjects.ts → useProjectsQuery, useCreateProjectMutation, etc.
  - /lib/api/hooks/useTenants.ts  → tenant-related hooks
  - /lib/api/index.ts             → export everything

  Future-proof: compatible with OpenAPI-based codegen tools (e.g. orval, openapi-typescript-codegen)